{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# fb Prophet with Multiplicative and logistic cap of 2 million\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "        <script type=\"text/javascript\">\n",
       "        window.PlotlyConfig = {MathJaxConfig: 'local'};\n",
       "        if (window.MathJax) {MathJax.Hub.Config({SVG: {font: \"STIX-Web\"}});}\n",
       "        if (typeof require !== 'undefined') {\n",
       "        require.undef(\"plotly\");\n",
       "        requirejs.config({\n",
       "            paths: {\n",
       "                'plotly': ['https://cdn.plot.ly/plotly-latest.min']\n",
       "            }\n",
       "        });\n",
       "        require(['plotly'], function(Plotly) {\n",
       "            window._Plotly = Plotly;\n",
       "        });\n",
       "        }\n",
       "        </script>\n",
       "        "
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "#libraries needed\n",
    "\n",
    "import pandas as pd\n",
    "import matplotlib.pyplot as plt\n",
    "import statistics\n",
    "import os\n",
    "import math\n",
    "\n",
    "from plotly.tools import FigureFactory as ff\n",
    "import plotly\n",
    "import plotly.graph_objs as go\n",
    "\n",
    "import seaborn as sns\n",
    "from fbprophet import Prophet\n",
    "\n",
    "## this is the datetime class that has useful functions to manipulate dates.\n",
    "from datetime import datetime\n",
    "\n",
    "%matplotlib inline\n",
    "plotly.offline.init_notebook_mode(connected=True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 106,
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/anaconda3/lib/python3.7/site-packages/ipykernel_launcher.py:31: SettingWithCopyWarning:\n",
      "\n",
      "\n",
      "A value is trying to be set on a copy of a slice from a DataFrame.\n",
      "Try using .loc[row_indexer,col_indexer] = value instead\n",
      "\n",
      "See the caveats in the documentation: http://pandas.pydata.org/pandas-docs/stable/indexing.html#indexing-view-versus-copy\n",
      "\n",
      "/anaconda3/lib/python3.7/site-packages/ipykernel_launcher.py:35: SettingWithCopyWarning:\n",
      "\n",
      "\n",
      "A value is trying to be set on a copy of a slice from a DataFrame.\n",
      "Try using .loc[row_indexer,col_indexer] = value instead\n",
      "\n",
      "See the caveats in the documentation: http://pandas.pydata.org/pandas-docs/stable/indexing.html#indexing-view-versus-copy\n",
      "\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>ydm</th>\n",
       "      <th>Totalrides</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>2013-06-30</td>\n",
       "      <td>577703</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>2013-07-31</td>\n",
       "      <td>843416</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>2013-08-31</td>\n",
       "      <td>1001958</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>2013-09-30</td>\n",
       "      <td>1034359</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>2013-10-31</td>\n",
       "      <td>1037712</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "         ydm  Totalrides\n",
       "0 2013-06-30      577703\n",
       "1 2013-07-31      843416\n",
       "2 2013-08-31     1001958\n",
       "3 2013-09-30     1034359\n",
       "4 2013-10-31     1037712"
      ]
     },
     "execution_count": 106,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "\n",
    "\n",
    "## import data directory the . at the start is the location of the python file\n",
    "\n",
    "importfile=\"./saved csv/1905017montlyridesbytype.csv\"\n",
    "df_month=pd.read_csv(importfile)\n",
    "\n",
    "#only need these columns for now because the model only accepts two columns, time(ds) and data (y)\n",
    "df_total=df_month[['month', 'Totalrides']]\n",
    "\n",
    "# I have to convert the date into a datetime format of YYYYMMDD and DD should be end of month as i have monthly data\n",
    "# so first I had to add the end of the month to the date string\n",
    "#I did it in this column of month here\n",
    "thirty=['09', '04','06', '11']\n",
    "ydm=[]\n",
    "\n",
    "for i in df_total['month']:\n",
    "    i = str(i)\n",
    "    if i[4:6]=='02':\n",
    "        i+='28'\n",
    "        ydm.append(i)\n",
    "        \n",
    "    elif i[4:6] in thirty:\n",
    "        i+='30'\n",
    "        ydm.append(i)\n",
    "    else:\n",
    "        i+='31'\n",
    "        ydm.append(i)\n",
    "\n",
    "#now add in the column, make new df with new column and \n",
    "df_total['ydm']=ydm\n",
    "df_totalP=df_total[['ydm', 'Totalrides']]\n",
    "\n",
    "# and convert to datetime here\n",
    "df_totalP['ydm'] = pd.to_datetime(df_total['ydm'],  format='%Y%m%d')\n",
    "\n",
    "df_totalP.head()\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "#### PROPHET only takes data as a dataframe with a ds (datestamp) and y (value we want to forecast) column. So first, letâ€™s convert the dataframe to the appropriate format."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 107,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>ds</th>\n",
       "      <th>y</th>\n",
       "      <th>cap</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>2013-06-30</td>\n",
       "      <td>577703</td>\n",
       "      <td>2000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>2013-07-31</td>\n",
       "      <td>843416</td>\n",
       "      <td>2000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>2013-08-31</td>\n",
       "      <td>1001958</td>\n",
       "      <td>2000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>2013-09-30</td>\n",
       "      <td>1034359</td>\n",
       "      <td>2000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>2013-10-31</td>\n",
       "      <td>1037712</td>\n",
       "      <td>2000000</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "          ds        y      cap\n",
       "0 2013-06-30   577703  2000000\n",
       "1 2013-07-31   843416  2000000\n",
       "2 2013-08-31  1001958  2000000\n",
       "3 2013-09-30  1034359  2000000\n",
       "4 2013-10-31  1037712  2000000"
      ]
     },
     "execution_count": 107,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#simple code to rename the columns and add a cap column for logistic growth in model\n",
    "df_totalP.columns=['ds','y']\n",
    "df_totalPcap=df_totalP\n",
    "df_totalPcap['cap'] = 2000000\n",
    "df_totalP.head()\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Here we can run the model"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### This is where we show how to implement Prophet monthly\n",
    "#### https://facebook.github.io/prophet/docs/non-daily_data.html"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 108,
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "INFO:fbprophet:Disabling weekly seasonality. Run prophet with weekly_seasonality=True to override this.\n",
      "INFO:fbprophet:Disabling daily seasonality. Run prophet with daily_seasonality=True to override this.\n",
      "/anaconda3/lib/python3.7/site-packages/pystan/misc.py:399: FutureWarning:\n",
      "\n",
      "Conversion of the second argument of issubdtype from `float` to `np.floating` is deprecated. In future, it will be treated as `np.float64 == np.dtype(float).type`.\n",
      "\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>ds</th>\n",
       "      <th>yhat</th>\n",
       "      <th>yhat_lower</th>\n",
       "      <th>yhat_upper</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>65</th>\n",
       "      <td>2018-11-30</td>\n",
       "      <td>1.468456e+06</td>\n",
       "      <td>1.326834e+06</td>\n",
       "      <td>1.601579e+06</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>66</th>\n",
       "      <td>2018-12-31</td>\n",
       "      <td>1.092149e+06</td>\n",
       "      <td>9.572818e+05</td>\n",
       "      <td>1.228524e+06</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>67</th>\n",
       "      <td>2019-01-31</td>\n",
       "      <td>7.780903e+05</td>\n",
       "      <td>6.364037e+05</td>\n",
       "      <td>9.118823e+05</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>68</th>\n",
       "      <td>2019-02-28</td>\n",
       "      <td>7.883763e+05</td>\n",
       "      <td>6.533725e+05</td>\n",
       "      <td>9.214909e+05</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>69</th>\n",
       "      <td>2019-03-31</td>\n",
       "      <td>8.068958e+05</td>\n",
       "      <td>6.655045e+05</td>\n",
       "      <td>9.446567e+05</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "           ds          yhat    yhat_lower    yhat_upper\n",
       "65 2018-11-30  1.468456e+06  1.326834e+06  1.601579e+06\n",
       "66 2018-12-31  1.092149e+06  9.572818e+05  1.228524e+06\n",
       "67 2019-01-31  7.780903e+05  6.364037e+05  9.118823e+05\n",
       "68 2019-02-28  7.883763e+05  6.533725e+05  9.214909e+05\n",
       "69 2019-03-31  8.068958e+05  6.655045e+05  9.446567e+05"
      ]
     },
     "execution_count": 108,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#fit model with multiplicative and logistic growth\n",
    "prophet_month= Prophet(seasonality_mode='multiplicative', growth='logistic')\n",
    "model_month = prophet_month.fit(df_totalPcap.iloc[0:56,])\n",
    "\n",
    "# Here when we forecast we use freqM. periods is now in months\n",
    "future_month = model_month.make_future_dataframe(periods=14, freq='M')\n",
    "future_month['cap']=2000000\n",
    "\n",
    "df_month_forecast = model_month.predict(future_month)\n",
    "df_month_forecast[['ds', 'yhat', 'yhat_lower', 'yhat_upper']].tail()\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 109,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 720x432 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "fig_month = model_month.plot(df_month_forecast)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 110,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 648x432 with 2 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "fig2_month = model_month.plot_components(df_month_forecast)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 116,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>ds</th>\n",
       "      <th>yhat</th>\n",
       "      <th>y</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>2013-06-30</td>\n",
       "      <td>676644.769703</td>\n",
       "      <td>577703</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>2013-07-31</td>\n",
       "      <td>702460.267880</td>\n",
       "      <td>843416</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>2013-08-31</td>\n",
       "      <td>769834.628329</td>\n",
       "      <td>1001958</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>2013-09-30</td>\n",
       "      <td>811356.995969</td>\n",
       "      <td>1034359</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>2013-10-31</td>\n",
       "      <td>792576.103580</td>\n",
       "      <td>1037712</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "          ds           yhat        y\n",
       "0 2013-06-30  676644.769703   577703\n",
       "1 2013-07-31  702460.267880   843416\n",
       "2 2013-08-31  769834.628329  1001958\n",
       "3 2013-09-30  811356.995969  1034359\n",
       "4 2013-10-31  792576.103580  1037712"
      ]
     },
     "execution_count": 116,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#next calculate RMSE for raining set and valiadation set. but first must generate df with train and validate y and yhat values\n",
    "df_month_errors=pd.concat([df_month_forecast[['ds','yhat']], df_totalP['y']], axis=1)\n",
    "df_train_errors=df_month_errors.iloc[0:56,]\n",
    "df_validate_errors=df_month_errors.iloc[56:,]\n",
    "df_validate_errors.head()\n",
    "\n",
    "#save df to csv\n",
    "savelocation='./saved csv/'\n",
    "df_train_errors.to_csv(savelocation+'Total_Prophet_multitraincap.csv', index=False)\n",
    "df_validate_errors.to_csv(savelocation+'Total_Prophet_multivalidatecap.csv', index=False)\n",
    "df_train_errors.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 112,
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/anaconda3/lib/python3.7/site-packages/plotly/graph_objs/_deprecations.py:372: DeprecationWarning:\n",
      "\n",
      "plotly.graph_objs.Line is deprecated.\n",
      "Please replace it with one of the following more specific types\n",
      "  - plotly.graph_objs.scatter.Line\n",
      "  - plotly.graph_objs.layout.shape.Line\n",
      "  - etc.\n",
      "\n",
      "\n"
     ]
    },
    {
     "data": {
      "application/vnd.plotly.v1+json": {
       "config": {
        "linkText": "Export to plot.ly",
        "plotlyServerURL": "https://plot.ly",
        "responsive": true,
        "showLink": false
       },
       "data": [
        {
         "mode": "lines",
         "name": "Mtrained_model",
         "type": "scatter",
         "uid": "1239c27d-78b7-44c8-946b-80d46cff7db8",
         "x": [
          "2013-06-30",
          "2013-07-31",
          "2013-08-31",
          "2013-09-30",
          "2013-10-31",
          "2013-11-30",
          "2013-12-31",
          "2014-01-31",
          "2014-02-28",
          "2014-03-31",
          "2014-04-30",
          "2014-05-31",
          "2014-06-30",
          "2014-07-31",
          "2014-08-31",
          "2014-09-30",
          "2014-10-31",
          "2014-11-30",
          "2014-12-31",
          "2015-01-31",
          "2015-02-28",
          "2015-03-31",
          "2015-04-30",
          "2015-05-31",
          "2015-06-30",
          "2015-07-31",
          "2015-08-31",
          "2015-09-30",
          "2015-10-31",
          "2015-11-30",
          "2015-12-31",
          "2016-01-31",
          "2016-02-28",
          "2016-03-31",
          "2016-04-30",
          "2016-05-31",
          "2016-06-30",
          "2016-07-31",
          "2016-08-31",
          "2016-09-30",
          "2016-10-31",
          "2016-11-30",
          "2016-12-31",
          "2017-01-31",
          "2017-02-28",
          "2017-03-31",
          "2017-04-30",
          "2017-05-31",
          "2017-06-30",
          "2017-07-31",
          "2017-08-31",
          "2017-09-30",
          "2017-10-31",
          "2017-11-30",
          "2017-12-31",
          "2018-01-31"
         ],
         "y": [
          676644.7697026217,
          702460.2678796764,
          769834.6283285234,
          811356.9959687945,
          792576.1035799254,
          576493.1209908713,
          403611.257830011,
          322473.98950696376,
          319753.6369313273,
          384753.76554962096,
          645874.0772786365,
          826882.391206311,
          875428.9662817265,
          943982.2787335785,
          1002805.3542709771,
          1059492.6021976676,
          1013038.7701112811,
          755689.8076419139,
          569309.1107627422,
          410814.023618211,
          421045.5678175373,
          436404.76354257646,
          836268.0075197947,
          1104098.2225800972,
          1089740.7986088214,
          1220606.156442367,
          1256441.2014406673,
          1330727.6703665215,
          1245022.4593670103,
          953630.6180764603,
          767009.5120665942,
          501996.30396183016,
          531563.5472827957,
          757658.9349164178,
          1006472.3947568631,
          1182026.334699554,
          1426338.1580532007,
          1407834.5149806708,
          1571035.3452335289,
          1631374.344999045,
          1606740.2751898635,
          1126759.6510878894,
          717147.4674760518,
          629510.6863145382,
          596318.1874939154,
          812397.9715719508,
          1197480.560428856,
          1461222.8883075956,
          1639666.2954380705,
          1679836.4983049016,
          1816688.2900889767,
          1890205.9311334766,
          1822045.2258572713,
          1308325.4546117794,
          903858.8394402375,
          712605.765411443
         ]
        },
        {
         "mode": "markers",
         "name": "Mtrained_values",
         "type": "scatter",
         "uid": "380ecf43-7f70-451c-8a0f-a25bbbd4677f",
         "x": [
          "2013-06-30",
          "2013-07-31",
          "2013-08-31",
          "2013-09-30",
          "2013-10-31",
          "2013-11-30",
          "2013-12-31",
          "2014-01-31",
          "2014-02-28",
          "2014-03-31",
          "2014-04-30",
          "2014-05-31",
          "2014-06-30",
          "2014-07-31",
          "2014-08-31",
          "2014-09-30",
          "2014-10-31",
          "2014-11-30",
          "2014-12-31",
          "2015-01-31",
          "2015-02-28",
          "2015-03-31",
          "2015-04-30",
          "2015-05-31",
          "2015-06-30",
          "2015-07-31",
          "2015-08-31",
          "2015-09-30",
          "2015-10-31",
          "2015-11-30",
          "2015-12-31",
          "2016-01-31",
          "2016-02-28",
          "2016-03-31",
          "2016-04-30",
          "2016-05-31",
          "2016-06-30",
          "2016-07-31",
          "2016-08-31",
          "2016-09-30",
          "2016-10-31",
          "2016-11-30",
          "2016-12-31",
          "2017-01-31",
          "2017-02-28",
          "2017-03-31",
          "2017-04-30",
          "2017-05-31",
          "2017-06-30",
          "2017-07-31",
          "2017-08-31",
          "2017-09-30",
          "2017-10-31",
          "2017-11-30",
          "2017-12-31",
          "2018-01-31"
         ],
         "y": [
          577703,
          843416,
          1001958,
          1034359,
          1037712,
          675774,
          443966,
          300400,
          224736,
          439117,
          670780,
          866117,
          936880,
          968842,
          963489,
          953887,
          828711,
          529188,
          399069,
          285552,
          196930,
          341826,
          652390,
          961986,
          941219,
          1085676,
          1179044,
          1289699,
          1212277,
          987245,
          804125,
          509478,
          560874,
          919921,
          1013149,
          1212280,
          1460318,
          1380110,
          1557663,
          1648856,
          1555923,
          1184408,
          806804,
          723483,
          784067,
          722529,
          1315404,
          1523268,
          1731594,
          1735599,
          1816498,
          1878098,
          1897592,
          1330649,
          889967,
          718994
         ]
        },
        {
         "mode": "lines",
         "name": "Mvalidate_model",
         "type": "scatter",
         "uid": "97e91c58-f9af-4f6e-b407-82b68aef9d6e",
         "x": [
          "2018-02-28",
          "2018-03-31",
          "2018-04-30",
          "2018-05-31",
          "2018-06-30",
          "2018-07-31",
          "2018-08-31",
          "2018-09-30",
          "2018-10-31",
          "2018-11-30",
          "2018-12-31",
          "2019-01-31",
          "2019-02-28",
          "2019-03-31"
         ],
         "y": [
          698153.4512165819,
          828985.17728813,
          1373839.5145689799,
          1735733.431719031,
          1814311.1629359766,
          1930810.2081055255,
          2024410.6169996131,
          2111994.0857447986,
          1993320.2167147456,
          1468455.6774070796,
          1092148.994791088,
          778090.3416179459,
          788376.2825818061,
          806895.7703878949
         ]
        },
        {
         "mode": "markers",
         "name": "Mvalidate_values",
         "type": "scatter",
         "uid": "3215451b-569c-4e66-a3f9-7066c9949e09",
         "x": [
          "2018-02-28",
          "2018-03-31",
          "2018-04-30",
          "2018-05-31",
          "2018-06-30",
          "2018-07-31",
          "2018-08-31",
          "2018-09-30",
          "2018-10-31",
          "2018-11-30",
          "2018-12-31",
          "2019-01-31",
          "2019-02-28",
          "2019-03-31"
         ],
         "y": [
          843114,
          976672,
          1307543,
          1824710,
          1953103,
          1913625,
          1977177,
          1877884,
          1878657,
          1260355,
          1016505,
          967287,
          943744,
          1327960
         ]
        }
       ],
       "layout": {
        "xaxis": {
         "title": {
          "text": "Month"
         },
         "type": "category"
        },
        "yaxis": {
         "title": {
          "text": "Number of Rides"
         }
        }
       }
      },
      "text/html": [
       "<div>\n",
       "        \n",
       "        \n",
       "            <div id=\"f066f74b-ec21-4aa0-9e2c-7c9322dc209f\" class=\"plotly-graph-div\" style=\"height:525px; width:100%;\"></div>\n",
       "            <script type=\"text/javascript\">\n",
       "                require([\"plotly\"], function(Plotly) {\n",
       "                    window.PLOTLYENV=window.PLOTLYENV || {};\n",
       "                    window.PLOTLYENV.BASE_URL='https://plot.ly';\n",
       "                    \n",
       "                if (document.getElementById(\"f066f74b-ec21-4aa0-9e2c-7c9322dc209f\")) {\n",
       "                    Plotly.newPlot(\n",
       "                        'f066f74b-ec21-4aa0-9e2c-7c9322dc209f',\n",
       "                        [{\"mode\": \"lines\", \"name\": \"Mtrained_model\", \"type\": \"scatter\", \"uid\": \"631ece6b-c390-46e4-99a5-de9d2196c636\", \"x\": [\"2013-06-30\", \"2013-07-31\", \"2013-08-31\", \"2013-09-30\", \"2013-10-31\", \"2013-11-30\", \"2013-12-31\", \"2014-01-31\", \"2014-02-28\", \"2014-03-31\", \"2014-04-30\", \"2014-05-31\", \"2014-06-30\", \"2014-07-31\", \"2014-08-31\", \"2014-09-30\", \"2014-10-31\", \"2014-11-30\", \"2014-12-31\", \"2015-01-31\", \"2015-02-28\", \"2015-03-31\", \"2015-04-30\", \"2015-05-31\", \"2015-06-30\", \"2015-07-31\", \"2015-08-31\", \"2015-09-30\", \"2015-10-31\", \"2015-11-30\", \"2015-12-31\", \"2016-01-31\", \"2016-02-28\", \"2016-03-31\", \"2016-04-30\", \"2016-05-31\", \"2016-06-30\", \"2016-07-31\", \"2016-08-31\", \"2016-09-30\", \"2016-10-31\", \"2016-11-30\", \"2016-12-31\", \"2017-01-31\", \"2017-02-28\", \"2017-03-31\", \"2017-04-30\", \"2017-05-31\", \"2017-06-30\", \"2017-07-31\", \"2017-08-31\", \"2017-09-30\", \"2017-10-31\", \"2017-11-30\", \"2017-12-31\", \"2018-01-31\"], \"y\": [676644.7697026217, 702460.2678796764, 769834.6283285234, 811356.9959687945, 792576.1035799254, 576493.1209908713, 403611.257830011, 322473.98950696376, 319753.6369313273, 384753.76554962096, 645874.0772786365, 826882.391206311, 875428.9662817265, 943982.2787335785, 1002805.3542709771, 1059492.6021976676, 1013038.7701112811, 755689.8076419139, 569309.1107627422, 410814.023618211, 421045.5678175373, 436404.76354257646, 836268.0075197947, 1104098.2225800972, 1089740.7986088214, 1220606.156442367, 1256441.2014406673, 1330727.6703665215, 1245022.4593670103, 953630.6180764603, 767009.5120665942, 501996.30396183016, 531563.5472827957, 757658.9349164178, 1006472.3947568631, 1182026.334699554, 1426338.1580532007, 1407834.5149806708, 1571035.3452335289, 1631374.344999045, 1606740.2751898635, 1126759.6510878894, 717147.4674760518, 629510.6863145382, 596318.1874939154, 812397.9715719508, 1197480.560428856, 1461222.8883075956, 1639666.2954380705, 1679836.4983049016, 1816688.2900889767, 1890205.9311334766, 1822045.2258572713, 1308325.4546117794, 903858.8394402375, 712605.765411443]}, {\"mode\": \"markers\", \"name\": \"Mtrained_values\", \"type\": \"scatter\", \"uid\": \"c9f6efe4-c766-403a-8d0e-2891c922f874\", \"x\": [\"2013-06-30\", \"2013-07-31\", \"2013-08-31\", \"2013-09-30\", \"2013-10-31\", \"2013-11-30\", \"2013-12-31\", \"2014-01-31\", \"2014-02-28\", \"2014-03-31\", \"2014-04-30\", \"2014-05-31\", \"2014-06-30\", \"2014-07-31\", \"2014-08-31\", \"2014-09-30\", \"2014-10-31\", \"2014-11-30\", \"2014-12-31\", \"2015-01-31\", \"2015-02-28\", \"2015-03-31\", \"2015-04-30\", \"2015-05-31\", \"2015-06-30\", \"2015-07-31\", \"2015-08-31\", \"2015-09-30\", \"2015-10-31\", \"2015-11-30\", \"2015-12-31\", \"2016-01-31\", \"2016-02-28\", \"2016-03-31\", \"2016-04-30\", \"2016-05-31\", \"2016-06-30\", \"2016-07-31\", \"2016-08-31\", \"2016-09-30\", \"2016-10-31\", \"2016-11-30\", \"2016-12-31\", \"2017-01-31\", \"2017-02-28\", \"2017-03-31\", \"2017-04-30\", \"2017-05-31\", \"2017-06-30\", \"2017-07-31\", \"2017-08-31\", \"2017-09-30\", \"2017-10-31\", \"2017-11-30\", \"2017-12-31\", \"2018-01-31\"], \"y\": [577703, 843416, 1001958, 1034359, 1037712, 675774, 443966, 300400, 224736, 439117, 670780, 866117, 936880, 968842, 963489, 953887, 828711, 529188, 399069, 285552, 196930, 341826, 652390, 961986, 941219, 1085676, 1179044, 1289699, 1212277, 987245, 804125, 509478, 560874, 919921, 1013149, 1212280, 1460318, 1380110, 1557663, 1648856, 1555923, 1184408, 806804, 723483, 784067, 722529, 1315404, 1523268, 1731594, 1735599, 1816498, 1878098, 1897592, 1330649, 889967, 718994]}, {\"mode\": \"lines\", \"name\": \"Mvalidate_model\", \"type\": \"scatter\", \"uid\": \"6036bcab-7287-4a41-9253-7d02a509bdf3\", \"x\": [\"2018-02-28\", \"2018-03-31\", \"2018-04-30\", \"2018-05-31\", \"2018-06-30\", \"2018-07-31\", \"2018-08-31\", \"2018-09-30\", \"2018-10-31\", \"2018-11-30\", \"2018-12-31\", \"2019-01-31\", \"2019-02-28\", \"2019-03-31\"], \"y\": [698153.4512165819, 828985.17728813, 1373839.5145689799, 1735733.431719031, 1814311.1629359766, 1930810.2081055255, 2024410.6169996131, 2111994.0857447986, 1993320.2167147456, 1468455.6774070796, 1092148.994791088, 778090.3416179459, 788376.2825818061, 806895.7703878949]}, {\"mode\": \"markers\", \"name\": \"Mvalidate_values\", \"type\": \"scatter\", \"uid\": \"4628e5e9-0cac-414a-8057-772809cccfd8\", \"x\": [\"2018-02-28\", \"2018-03-31\", \"2018-04-30\", \"2018-05-31\", \"2018-06-30\", \"2018-07-31\", \"2018-08-31\", \"2018-09-30\", \"2018-10-31\", \"2018-11-30\", \"2018-12-31\", \"2019-01-31\", \"2019-02-28\", \"2019-03-31\"], \"y\": [843114, 976672, 1307543, 1824710, 1953103, 1913625, 1977177, 1877884, 1878657, 1260355, 1016505, 967287, 943744, 1327960]}],\n",
       "                        {\"xaxis\": {\"title\": {\"text\": \"Month\"}, \"type\": \"category\"}, \"yaxis\": {\"title\": {\"text\": \"Number of Rides\"}}},\n",
       "                        {\"showLink\": false, \"linkText\": \"Export to plot.ly\", \"plotlyServerURL\": \"https://plot.ly\", \"responsive\": true}\n",
       "                    ).then(function(){\n",
       "                            \n",
       "var gd = document.getElementById('f066f74b-ec21-4aa0-9e2c-7c9322dc209f');\n",
       "var x = new MutationObserver(function (mutations, observer) {{\n",
       "        var display = window.getComputedStyle(gd).display;\n",
       "        if (!display || display === 'none') {{\n",
       "            console.log([gd, 'removed!']);\n",
       "            Plotly.purge(gd);\n",
       "            observer.disconnect();\n",
       "        }}\n",
       "}});\n",
       "\n",
       "// Listen for the removal of the full notebook cells\n",
       "var notebookContainer = gd.closest('#notebook-container');\n",
       "if (notebookContainer) {{\n",
       "    x.observe(notebookContainer, {childList: true});\n",
       "}}\n",
       "\n",
       "// Listen for the clearing of the current output cell\n",
       "var outputEl = gd.closest('.output');\n",
       "if (outputEl) {{\n",
       "    x.observe(outputEl, {childList: true});\n",
       "}}\n",
       "\n",
       "                        })\n",
       "                };\n",
       "                });\n",
       "            </script>\n",
       "        </div>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "#here i am using plotly instead to plot the data of the train and validate stats\n",
    "\n",
    "#define each line individually \n",
    "trace_trainmodel = go.Line(x= df_train_errors['ds'],y=df_train_errors['yhat'], name= 'Mtrained_model',mode=\"lines\")\n",
    "trace_trainvalues = go.Scatter(x= df_train_errors['ds'],y=df_train_errors['y'], name= 'Mtrained_values',mode=\"markers\")\n",
    "trace_validmodel = go.Line(x= df_validate_errors['ds'],y=df_validate_errors['yhat'], name = 'Mvalidate_model',mode=\"lines\")\n",
    "trace_validvalues = go.Scatter(x= df_validate_errors['ds'],y=df_validate_errors['y'], name = 'Mvalidate_values', mode=\"markers\")\n",
    "\n",
    "#commit it to data\n",
    "data_total=[trace_trainmodel, trace_trainvalues, trace_validmodel, trace_validvalues]\n",
    "\n",
    "#adjust the layout settings\n",
    "layout_total = go.Layout(xaxis=dict(type='category', title='Month'),yaxis=dict(title='Number of Rides'))\n",
    "\n",
    "#commit to figure\n",
    "fig = go.Figure(data=data_total, layout=layout_total)\n",
    "#plot in notebook\n",
    "plotly.offline.iplot(fig, filename='multiplicative_Prophet.html')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 113,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Multiplicative Training  RMSE =  108876.87270678283\n",
      "Multiplicative Validate RMSE =  193714.0864008187\n"
     ]
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "#function to calculate RMSE\n",
    "def rmse_calc(df_yhat, df_y):\n",
    "    df_resid = (df_yhat - df_y)**2\n",
    "    av_resid = df_resid.mean()\n",
    "    rmse=math.sqrt(av_resid)\n",
    "    df_resid.plot(kind='line',x='ds',y='df_resid')\n",
    "    return(rmse)\n",
    "\n",
    "print ('Multiplicative Training  RMSE = ', rmse_calc(df_train_errors['yhat'], df_train_errors['y']))\n",
    "print ('Multiplicative Validate RMSE = ', rmse_calc(df_validate_errors['yhat'], df_validate_errors['y']))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 114,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Multiplicative Training  mape =  13.176032216209252\n",
      "Multiplicative Validate mape =  12.174143940086632\n"
     ]
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "# function to calulate MAPE\n",
    "def mape_calc(df_yhat, df_y):\n",
    "    df_resid_frac = (abs(df_y - df_yhat)/df_y)*100\n",
    "    av_mape = df_resid_frac.mean()\n",
    "    df_resid_frac.plot(kind='line',x='ds',y='df_resid')\n",
    "    return(av_mape)\n",
    "\n",
    "print ('Multiplicative Training  mape = ', mape_calc(df_train_errors['yhat'], df_train_errors['y']))\n",
    "print ('Multiplicative Validate mape = ', mape_calc(df_validate_errors['yhat'], df_validate_errors['y']))\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 139,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>ds</th>\n",
       "      <th>mape</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>56</th>\n",
       "      <td>2018-02-28</td>\n",
       "      <td>17.193470</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>57</th>\n",
       "      <td>2018-03-31</td>\n",
       "      <td>15.121435</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>58</th>\n",
       "      <td>2018-04-30</td>\n",
       "      <td>5.070312</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>59</th>\n",
       "      <td>2018-05-31</td>\n",
       "      <td>4.876203</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>60</th>\n",
       "      <td>2018-06-30</td>\n",
       "      <td>7.106222</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>61</th>\n",
       "      <td>2018-07-31</td>\n",
       "      <td>0.898045</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>62</th>\n",
       "      <td>2018-08-31</td>\n",
       "      <td>2.388942</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>63</th>\n",
       "      <td>2018-09-30</td>\n",
       "      <td>12.466696</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>64</th>\n",
       "      <td>2018-10-31</td>\n",
       "      <td>6.103467</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>65</th>\n",
       "      <td>2018-11-30</td>\n",
       "      <td>16.511275</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>66</th>\n",
       "      <td>2018-12-31</td>\n",
       "      <td>7.441576</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>67</th>\n",
       "      <td>2019-01-31</td>\n",
       "      <td>19.559516</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>68</th>\n",
       "      <td>2019-02-28</td>\n",
       "      <td>16.462909</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>69</th>\n",
       "      <td>2019-03-31</td>\n",
       "      <td>39.237946</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "           ds       mape\n",
       "56 2018-02-28  17.193470\n",
       "57 2018-03-31  15.121435\n",
       "58 2018-04-30   5.070312\n",
       "59 2018-05-31   4.876203\n",
       "60 2018-06-30   7.106222\n",
       "61 2018-07-31   0.898045\n",
       "62 2018-08-31   2.388942\n",
       "63 2018-09-30  12.466696\n",
       "64 2018-10-31   6.103467\n",
       "65 2018-11-30  16.511275\n",
       "66 2018-12-31   7.441576\n",
       "67 2019-01-31  19.559516\n",
       "68 2019-02-28  16.462909\n",
       "69 2019-03-31  39.237946"
      ]
     },
     "execution_count": 139,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# function to save MAPE df for use in Tableau\n",
    "def dict_mape_calc(df_yhat, df_y):\n",
    "    df_resid_frac = (abs(df_y - df_yhat)/df_y)*100\n",
    "    return(df_resid_frac)\n",
    "\n",
    "mapetrain=dict_mape_calc(df_train_errors['yhat'], df_train_errors['y'])\n",
    "\n",
    "mapetrainC=pd.concat([df_train_errors['ds'], mapetrain], axis=1)\n",
    "mapetrainC.rename(columns={mapetrainC.columns[1]:'mape'}, inplace=True)\n",
    "\n",
    "savelocation='./saved csv/'\n",
    "mapetrainC.to_csv(savelocation+'Total_prophet_multicaptrainMAPE.csv', index=False)\n",
    "\n",
    "#############################################\n",
    "mapeVal=dict_mape_calc(df_validate_errors['yhat'], df_validate_errors['y'])\n",
    "\n",
    "mapevalidateC=pd.concat([df_validate_errors['ds'], mapeVal], axis=1)\n",
    "mapevalidateC.rename(columns={mapevalidateC.columns[1]:'mape'}, inplace=True)\n",
    "\n",
    "savelocation='./saved csv/'\n",
    "mapevalidateC.to_csv(savelocation+'Total_prophet_multicapValMAPE.csv', index=False)\n",
    "mapevalidateC\n",
    "\n",
    "\n",
    "m = Prophet(weekly_seasonality=False,yearly_seasonality=False)\n",
    "m.add_seasonality('self_define_cycle',period=8,fourier_order=8,mode='additive')"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.7.3"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
